name: Build with .NET Versions

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["6.0.x", "7.0.x", "8.0.x"]

    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🚀 Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: 🧶 Restore dependencies
        run: dotnet restore
    
      - name: 🏗️ Build
        run: dotnet build --no-restore
    
      - name: 🏗️ Build linux-x64 binary
        run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true --self-contained true

      - name: 🏗️ Build linux-musl-x64 binary
        run: dotnet publish -c Release -r linux-musl-x64 -p:PublishSingleFile=true --self-contained true


  dotnet-6-linux-musl:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 👓 Read version_info
        id: version
        run: |
          VERSION_INFO=$(cat VERSION_INFO)
          echo "Version Info: $VERSION_INFO"
          echo "::set-output name=version::$VERSION_INFO"

      - name: 🐳🏗️ Docker build
        run: docker build --no-cache --rm -t your-image-name .

      - name: 📦 dotnet publish
        run: |
          docker run --rm -v "$PWD:/app" your-image-name dotnet publish -c Release -r linux-musl-x64 -p:PublishSingleFile=true --self-contained true

      - name: ℹ️ Show version
        run: docker run --rm -v "$PWD:/app" your-image-name /app/bin/Release/net6.0/linux-musl-x64/publish/lvfucs --version
  
  release:
    runs-on: ubuntu-latest
    needs: dotnet-6-linux-musl
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🚀 Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      
      - name: 👓 Read version_info
        id: version
        run: |
          VERSION_INFO=$(cat VERSION_INFO)
          echo "Version Info: $VERSION_INFO"
          echo "::set-output name=version::$VERSION_INFO"

      - name: 🧶 Restore dependencies
        run: dotnet restore
    
      - name: 🏗️ Build linux-musl-x64 binary
        run: dotnet publish -c Release -r linux-musl-x64 -p:PublishSingleFile=true --self-contained true

      - name: 📦 Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          files: bin/Release/*/linux-musl-x64/publish/lvfucs